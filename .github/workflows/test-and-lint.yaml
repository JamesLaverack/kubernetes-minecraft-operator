name: Test & Lint

# Run the tests on any branch push
on:
  push:
    branches:
     - '*'
  pull_request:
    branches:
     - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.3

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@v0.1.12

      - name: Install controller-gen
        run: go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.9.2

      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Format
        run: go fmt ./...

      - name: Vet
        run: go vet ./...

      - name: Regenerate Go DeepCopy Code & CRD YAML
        run: go generate ./...

      - name: Imports
        run: goimports -w .

      - name: Verify No Changes
        id: verify-no-changes
        uses: tj-actions/verify-changed-files@v11.1

      - name: Fail If Changes
        if: steps.verify-no-changes.outputs.files_changed == 'true'
        run: "false"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kubernetes: [1.22, 1.23, 1.24]

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: Install setup-envtest
        run: go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest

      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        env:
          ENVTEST_K8S_VERSION: ${{ matrix.kubernetes }}
        run: |
          source <(setup-envtest use -p env)
          go test ./...
