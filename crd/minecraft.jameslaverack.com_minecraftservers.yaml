---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: minecraftservers.minecraft.jameslaverack.com
spec:
  group: minecraft.jameslaverack.com
  names:
    kind: MinecraftServer
    listKind: MinecraftServerList
    plural: minecraftservers
    singular: minecraftserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.minecraftVersion
      name: Version
      type: string
    - jsonPath: .spec.type
      name: Type
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MinecraftServer is the Schema for the minecraftservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MinecraftServerSpec defines the desired state of MinecraftServer
            properties:
              allowList:
                items:
                  description: Player is a Minecraft player defined by a username
                    or a UUID
                  properties:
                    name:
                      type: string
                    uuid:
                      type: string
                  type: object
                type: array
              dynmap:
                properties:
                  enabled:
                    type: boolean
                  persistentVolumeClaim:
                    description: PersistentVolumeClaimVolumeSource references the
                      user's PVC in the same namespace. This volume finds the bound
                      PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                      is, essentially, a wrapper around another type of volume that
                      is owned by someone else (the system).
                    properties:
                      claimName:
                        description: 'claimName is the name of a PersistentVolumeClaim
                          in the same namespace as the pod using this volume. More
                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        type: string
                      readOnly:
                        description: readOnly Will force the ReadOnly setting in VolumeMounts.
                          Default false.
                        type: boolean
                    required:
                    - claimName
                    type: object
                required:
                - enabled
                type: object
              eula:
                enum:
                - Accepted
                - NotAccepted
                type: string
              externalServiceIP:
                type: string
              maxPlayers:
                type: integer
              minecraftVersion:
                type: string
              monitoring:
                properties:
                  enabled:
                    type: boolean
                required:
                - enabled
                type: object
              motd:
                type: string
              opsList:
                items:
                  description: Player is a Minecraft player defined by a username
                    or a UUID
                  properties:
                    name:
                      type: string
                    uuid:
                      type: string
                  type: object
                type: array
              type:
                enum:
                - Paper
                - Forge
                type: string
              vanillaTweaks:
                properties:
                  experimental:
                    items:
                      type: string
                    type: array
                  hermitcraft:
                    items:
                      type: string
                    type: array
                  items:
                    items:
                      type: string
                    type: array
                  mobs:
                    items:
                      type: string
                    type: array
                  survival:
                    items:
                      type: string
                    type: array
                  teleportation:
                    items:
                      type: string
                    type: array
                  utilities:
                    items:
                      type: string
                    type: array
                type: object
              viewDistance:
                type: integer
              world:
                properties:
                  persistentVolumeClaim:
                    description: PersistentVolumeClaimVolumeSource references the
                      user's PVC in the same namespace. This volume finds the bound
                      PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                      is, essentially, a wrapper around another type of volume that
                      is owned by someone else (the system).
                    properties:
                      claimName:
                        description: 'claimName is the name of a PersistentVolumeClaim
                          in the same namespace as the pod using this volume. More
                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        type: string
                      readOnly:
                        description: readOnly Will force the ReadOnly setting in VolumeMounts.
                          Default false.
                        type: boolean
                    required:
                    - claimName
                    type: object
                type: object
            required:
            - eula
            - externalServiceIP
            - maxPlayers
            - minecraftVersion
            - motd
            - type
            - viewDistance
            type: object
          status:
            description: MinecraftServerStatus defines the observed state of MinecraftServer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
